version: "3.9"

services:
  db:
    image: postgres:16
    container_name: progresstracker_db_prod
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    # No port exposure - only accessible within Docker network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: progresstracker_api_prod
    restart: always
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
      # Add production-specific environment variables here
      # LOG_LEVEL: "INFO"
      # SENTRY_DSN: "${SENTRY_DSN}"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request; urllib.request.urlopen('http://localhost:8000/health', timeout=5)\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    # No volume mounts in production - code is baked into image

volumes:
  postgres_data_prod:

networks:
  app-network:
    driver: bridge
